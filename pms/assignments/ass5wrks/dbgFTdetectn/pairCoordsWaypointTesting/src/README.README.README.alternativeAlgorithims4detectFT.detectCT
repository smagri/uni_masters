27jun2018

Questions to ask Alen:

a) sample.cpp.wrks.beforeAlternativeRewriteOf.detectCT.detectFT
== sample.cpp.wrks@27jun2018:
is the original detectCellTypes() and detctFrontiers() algorithims,
all other attempts after this are in:
src/milestones.sample.cpp.before.pathTopic2goFromFT2FT
sample.cpp in this directory is the last variation before the
path2goFromFT2FT sample.cpp is implemented.


b) sample.cpp.alternativeRewriteOf.detectCT.detectFT:
starts to alteternative the detectFrontiers() and detectCellTypes()
algorithims, which may be wrong.

I don't  know which one  to follow as  if i use  detectFrontiers().a i
could virtually ignore all the laserCallback() laser readings and just
probe  the current  ogMap for  FT  cells.  Doesn't  the current  image
contain the ogMap generated by  the LRF(laser range finder, or laser).
This  doesn't seem  to  be right  as why  do  we have  laserCallback()
closest_point or laser readings.

So if I was to  try to include the laserCallback() laser/closest_point
readings i  would be assuming  the ogMap image  is blank?? and  I must
populate it  by the  LRF scanning  it's environment  at each  FT node,
trying to detect UK cells.

Which begs the  question what does image  in sepearteThread() actually
mean, does it all contain 0 or UK cells???  Shurely this is the ogMap.
But how do I update it's cells with the LRF readings/closest_point.

Overall, the robot moves from FT to FT via BFS or just using it's
sensors to navigate around obsticles?

At each FT node it does a 360  degree turn with 0, 90, 180, 270 degree
angle  measurments used  for determining  if FS  in the  scan goto  FT
cells.   However, probing  LaserScan.msg in  laserCallback() show  the
readonly angle_increment as 1 degree.

But perhaps this is wrong and we have an alternative algorithim for b)
above:
---------------------------------------------------------------------:

When the robot  is at a FT  node it does a 360  degree(with one degree
increments)  sweep  creating a  new  ogMap.   We  need to  detect  the
frontiers within  this ogMap and add  them to the list  of unvisitedFT
nodes.    This  is   done  by   detectFrontiers()  in   a),  that   is
sample.cpp.wrks.beforeAlternativeRewriteOf.detectCT.detectFT.      All
theh currently know  FT's then need to be diplayed  on the global map,
"global" openCV window.

At the  the FT node,  laserCallback() determines the closest  point to
the robot and the angle at which it occurs.

a. Is this the closest FT node???

2. Or just the next FS cells and  the angle at which they occur. So do
   I move the robot in that direction???  ie x,y,angle determined from
   laserCallback().  Do  I use detectCellTypes()  in a) at  this stage
   for anything???

3. Assignment specs says need to do a RequestGoal Service Call for the
   path.  Ok, this probably  means that I don't do a  DFS or BFS here,
   or get it  from project one in my case(i'm  doing project two).  Do
   this i  think is most likely.   So need to review  services in ros,
   and probably my RequestGoal() is not what is really required here.

   The  path will  be supplies(by  ROS???) via  the /path  topic using
   using the PoseArray message.
   


3) note however, current sample.cpp contains a) plus a few comments
added.


4) also read: README.programFlowControl to help understand the
question, and ask Alen more questions.

5) also noe that a) contains the facilative functions for:

* ogmap2global() maps the ogmap pixel values to the "global" window.
* an example of plotting FT cells and waypoints on the "global"
  window, using openCV 2d points, ie points are doubles not ints.
* requestGaol() is used to move the robot from frontier to frontier
  but this maybe is not it's true purpose???
